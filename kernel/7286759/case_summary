Problem Statement
超长的CPU时间
Description
在查看进程时，发现进程存活了超长的CPU时间，如以下命令所示，服务器启动了307天，进程oraclemondb1 却占用了21万天的CPU时间
服务器上的进程状态：
mondb1@ZJ/monitor/LightCam/scripts$ps -ef|grep 17841
oracle    17841      1 99 May27 ?        213553-18:18:12 oraclemondb1 (LOCAL=NO)

mondb1@ZJ/monitor/LightCam/scripts$ps -eo user,pid,ppid,pcpu,vsz,etime,args|grep 17841
oracle    17841      1 117475 230676 181-18:51:38 oraclemondb1 (LOCAL=NO)

mondb1@ZJ/monitor/LightCam/scripts$uptime
11:46:03 up 307 days,  1:16,  5 users,  load average: 21.29, 6.98, 4.96

Solution
upgrade Kernel

    The code did not perform the correct arithmetic on 64-bit systems. Specifically, it performed a division using a function which expects a 32-bit divisor only, but supplies a 64-bit divisor. The division function zero extends the low 32-bits of the divisor, resulting in an incorrect result, or in the case where those low 32-bits happen to be zero, a crash due to division by zero.

    This was solved by introducing the scale_utime() function (listed below), which calls the correct divide function for the size of the cputime type.

    static cputime_t scale_utime(cputime_t utime, cputime_t rtime, cputime_t total)
    {
        u64 temp = (__force u64) rtime;

        temp *= (__force u64) utime;

        if (sizeof(cputime_t) == 4)
            do_div(temp, (__force u32) total);
        else
            temp = div64_u64(temp, (__force u64) total);

        return (__force cputime_t) temp;
    }
